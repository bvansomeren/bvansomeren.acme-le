---
# for issuing

- name: ensure certificates are setup using standalone
  shell: "acme.sh --issue {% if acme_test %} --test {% endif %} --standalone {% if letsencrypt_host is defined %} --local-address {{ letsencrypt_host }} {% endif %} --httpport {{ acme_standalone_port }} -k {{ acme_keylength }} -d {{ domain }} {% for alternative in alternatives %} -d {{ alternative }} {% endfor %}"
  args:
    chdir: "{{ acme_home }}/.acme.sh/"
    creates: "{{ acme_home }}/certs/{{ domain }}"

- name: combine full chain and key for haproxy
  shell: "cat {{ domain }}/fullchain.cer {{ domain }}/{{ domain }}.key > {{ haproxy_export_folder }}/{{ domain }}-combined"
  args:
    chdir: "{{ acme_home }}/certs/"
    creates: "{{ haproxy_export_folder }}/{{ domain }}-combined"

- name: rsync to loadbalancers
  command: "rsync -azv {{ acme_home }}/certs/haproxy_export {{ item }}:~/certs/"
  become: True
  become_user: acme
  with_items: "{{ loadbalancers }}"
